plugins {
    id "java"
    id "application"
    id 'org.javamodularity.moduleplugin' version '1.8.12'
    id 'org.openjfx.javafxplugin' version '0.0.14'
    id 'org.beryx.jlink' version '2.25.0'
    id 'com.github.johnrengelman.shadow' version '8.0.0'
}

group = "eu.lilithmonodia"
version = "0.1 SNAPSHOT"

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.9.2'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    implementation 'org.jetbrains:annotations:24.0.0'
    implementation("org.postgresql:postgresql:42.6.0")
    implementation("org.json:json:20230618")
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

jar {
    manifest {
        attributes('Main-Class': 'eu.lilithmonodia.winestock.Launcher')
    }
}

application {
    mainModule = "eu.lilithmonodia.winestock"
    mainClass = "eu.lilithmonodia.winestock.Launcher"
}

javafx {
    version = '17.0.7'
    modules = ['javafx.controls', 'javafx.fxml']
}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher { name = 'app' }
}

jlinkZip {
    group = 'distribution'
}

shadowJar {
    archiveBaseName.set('WineStock')
    archiveVersion.set("${version}-shadow")
    archiveClassifier.set('')
    mergeServiceFiles()
    manifest {
        attributes 'Main-Class': 'eu.lilithmonodia.winestock.Launcher'
    }
    configurations = [project.configurations.runtimeClasspath]
}